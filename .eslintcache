[{"/Users/marklevitas/Documents/freelance/weatherapi/src/index.js":"1","/Users/marklevitas/Documents/freelance/weatherapi/src/App.js":"2","/Users/marklevitas/Documents/freelance/weatherapi/src/reportWebVitals.js":"3","/Users/marklevitas/Documents/freelance/weatherapi/src/pages/Home/Home.js":"4","/Users/marklevitas/Documents/freelance/weatherapi/src/reducers/reducer.js":"5","/Users/marklevitas/Documents/freelance/weatherapi/src/pages/FullReport/FullReport.js":"6","/Users/marklevitas/Documents/freelance/weatherapi/src/Modals/Cookie/Cookie.js":"7","/Users/marklevitas/Documents/freelance/weatherapi/src/pages/FullReport/BackgroundChange.js":"8"},{"size":768,"mtime":1610999607937,"results":"9","hashOfConfig":"10"},{"size":582,"mtime":1611862921087,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610923868352,"results":"12","hashOfConfig":"10"},{"size":7961,"mtime":1611858938522,"results":"13","hashOfConfig":"10"},{"size":808,"mtime":1611769636531,"results":"14","hashOfConfig":"10"},{"size":7877,"mtime":1611873513618,"results":"15","hashOfConfig":"10"},{"size":848,"mtime":1611789172913,"results":"16","hashOfConfig":"10"},{"size":3074,"mtime":1611871995717,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11o2ik5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marklevitas/Documents/freelance/weatherapi/src/index.js",[],["36","37"],"/Users/marklevitas/Documents/freelance/weatherapi/src/App.js",[],"/Users/marklevitas/Documents/freelance/weatherapi/src/reportWebVitals.js",[],"/Users/marklevitas/Documents/freelance/weatherapi/src/pages/Home/Home.js",["38"],"import React, { useEffect } from 'react'\nimport './Home.scss'\nimport Axios from 'axios'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nconst Home = (props) => {\n\n    useEffect(() => {\n        if (localStorage.getItem('recent') === null) {\n            props.setRecents([])\n        } else {\n            const key = process.env.REACT_APP_KEY\n            const recentsRequest = JSON.parse(localStorage.getItem('recent')).map(latLong => {\n                const options = {\n                    params: {\n                        key,\n                        q: latLong,\n                    }\n                }\n                return Axios.request(`http://api.weatherapi.com/v1/current.json`, options)\n            })\n            Promise.all(recentsRequest).then(results => props.setRecents(results))\n        }\n    }, [])\n\n\n    const autoComplete = (e) => {\n        props.setSearchValue(e.target.value)\n        if (e.target.value.length < 2) {\n            return\n        }\n        const key = process.env.REACT_APP_KEY\n        const options = {\n            params: {\n                key,\n                q: e.target.value\n            }\n        }\n        Axios.request(`http://api.weatherapi.com/v1/search.json`, options).then(res => {\n            props.setSearchedLocations(res.data)\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    const getFullReport = (location) => {\n        const key = process.env.REACT_APP_KEY\n        const options = {\n            params: {\n                key,\n                q: `${location.lat},${location.lon}`,\n                days: 3\n            }\n        }\n        Axios.request(`http://api.weatherapi.com/v1/forecast.json`, options).then(res => {\n            res.data.length === 0 ? props.setSelected([]) : props.setSelected(res.data)\n            if (localStorage.getItem('recent') === null || localStorage.getItem('saved') === null) {\n                return\n            }\n\n            let recents = JSON.parse(localStorage.getItem('recent'))\n            if(recents.includes(`${location.lat},${location.lon}`)){\n                return\n            }\n            \n            if (recents.length === 4) {\n                recents.pop()\n            }\n\n            localStorage.setItem('recent', JSON.stringify([`${location.lat},${location.lon}`, ...recents]))\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    const arrowNavigation = (e) => {\n        if (e.keyCode === 38 || e.keyCode === 40) {\n            const droppedDown = document.querySelectorAll('.bar');\n            if (droppedDown) {\n                let currentHighlight = 0;\n                droppedDown.forEach((bar, i) => {\n                    if (bar.classList.contains('highlight')) {\n                        currentHighlight = i;\n                    }\n                    bar.classList.remove('highlight')\n                });\n                if (e.keyCode === 38) {\n                    if (currentHighlight === 0) {\n                        return droppedDown[droppedDown.length - 1].classList.add('highlight')\n                    }\n                    droppedDown[currentHighlight - 1].classList.add('highlight')\n                } else if (e.keyCode === 40) {\n                    if (currentHighlight === droppedDown.length - 1) {\n                        return droppedDown[0].classList.add('highlight')\n                    }\n                    droppedDown[currentHighlight + 1].classList.add('highlight')\n                } else {\n                    return\n                }\n            }\n        }\n        if (e.keyCode === 13) {\n            props.searchedLocations.forEach(location => {\n                if (location.name === document.querySelector('.highlight').innerText) {\n                    getFullReport(location)\n                }\n            });\n        }\n\n    }\n    return (\n        <>\n            {\n                !props.setLocation\n                    ?\n                    <div className='homeCont'>\n                        <div className='middleFlex'>\n                            <h1>Weather API</h1>\n                            <div className='searchBar'>\n                                <input maxLength=\"100\" type='text' placeholder=\"City or Zip\"\n                                    value={props.searcheQuery}\n                                    onChange={(e) => { autoComplete(e) }}\n                                    onKeyUp={(e) => { arrowNavigation(e) }}\n                                    onBlur={() => { document.querySelector('.autoCompleteCont').style.display = 'none' }}\n                                    onFocus={() => { document.querySelector('.autoCompleteCont').style.display = 'block' }} />\n                                <div className='autoCompleteCont'>\n                                    {\n                                        props.searchedLocations.length === 0 && props.searchQuery.length > 2 ?\n                                        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n                                            :\n                                            props.searchedLocations?.map((location, i) => {\n                                                return (\n                                                    i > 4 ? null :\n                                                        <div key={i} className={`bar ${i === 0 ? 'highlight' : null}`} onMouseDown={() => {\n                                                            getFullReport(location)\n                                                        }}>\n                                                            <span>{location.name}</span>\n                                                        </div>\n                                                )\n                                            })\n                                    }\n\n                                </div>\n                            </div>\n                            <div className='recents'>\n                                {\n                                    props.recents === null\n                                        ?\n                                        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n                                        :\n                                        props.recents.map((recent, i )=> {\n                                            return(\n                                                <div key={i} className='recentCont' onClick={() => {getFullReport(recent.data.location)}}>\n                                                    <span className='name'>{recent.data.location.name}</span>\n                                                    <img alt='weather icon' src={recent.data.current.condition.icon}/>\n                                                    <span>{recent.data.current.temp_f} ยบ F</span>\n                                                </div>\n                                            )\n                                        })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <Redirect to={`/${props.setLocation.location.name}`} />\n            }\n\n        </>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSearchValue: (value) => { dispatch({ type: 'SET_QUERY', payload: value }) },\n        setSearchedLocations: (locations) => { dispatch({ type: 'SET_LOCATIONS', payload: locations }) },\n        setSelected: (data) => { dispatch({ type: 'SET_SELECTED', payload: data }) },\n        setRecents: (data) => { dispatch({ type: 'SET_RECENTS', payload: data }) }\n    }\n}\n\nexport default connect(state => {\n    return {\n        searchedLocations: state.searchedLocations,\n        searchQuery: state.searchQuery,\n        setLocation: state.setLocation,\n        recents: state.recents\n    }\n}, mapDispatchToProps)(Home)","/Users/marklevitas/Documents/freelance/weatherapi/src/reducers/reducer.js",[],"/Users/marklevitas/Documents/freelance/weatherapi/src/pages/FullReport/FullReport.js",["39"],"/Users/marklevitas/Documents/freelance/weatherapi/src/Modals/Cookie/Cookie.js",[],"/Users/marklevitas/Documents/freelance/weatherapi/src/pages/FullReport/BackgroundChange.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":24,"column":8,"nodeType":"46","endLine":24,"endColumn":10,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":24,"column":8,"nodeType":"46","endLine":24,"endColumn":10,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["52"],"React Hook useEffect has missing dependencies: 'props.setLocation' and 'setLocation'. Either include them or remove the dependency array.",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [props]",{"range":"58","text":"59"},"Update the dependencies array to be: [props.setLocation, setLocation]",{"range":"60","text":"61"},[844,846],"[props]",[1014,1016],"[props.setLocation, setLocation]"]